set-option -sa terminal-overrides ",xterm*:Tc"
set -g mouse on

# Set prefix
unbind C-b
set -g prefix C-Space
bind C-Space send-prefix

# Shift Alt vim keys to switch windows
bind -n M-H previous-window
bind -n M-L next-window

# Start windows and panes at 1, not 0
set -g base-index 1
set -g pane-base-index 1
set-window-option -g pane-base-index 1
set-option -g renumber-windows on

# Position for the status bar
set-option -g status-position bottom

# Nicer split window bindings.
unbind-key %
bind-key | split-window -h -c "#{pane_current_path}"
unbind-key '"'
bind-key - split-window -v -c "#{pane_current_path}"

# Create a bottom split pane for special cases
bind-key ` split-window -fv ';' resize-pane -y 20

# Simple, non-prefixed, mappings.
bind-key -n M-w new-window -c "#{pane_current_path}"      # Create (W)indow
bind-key -n M-z resize-pane -Z                            # Toggle (Z)oom
bind-key -n M-v split-window -h -c "#{pane_current_path}" # (V)ertical split
bind-key -n M-h split-window -v -c "#{pane_current_path}" # (H)orizontal split
bind-key -n M-r command-prompt -I "" "rename-window '%%'" # (R)ename window
bind-key -n M-y setw synchronize-panes                    # S(Y)nchronize panes
bind-key -n M-l last-window                               # (L)ast window
bind-key -n M-a select-pane -t :.+                        # (A)djacent pane
bind-key -n M-x choose-session                            # E(X)change session
bind-key -n M-< swap-pane -D                              # Swap pane backward
bind-key -n M-> swap-pane -U                              # Swap pane forward

# Switch windows using Alt-<number>.
bind-key -n M-1 select-window -t 1
bind-key -n M-2 select-window -t 2
bind-key -n M-3 select-window -t 3
bind-key -n M-4 select-window -t 4
bind-key -n M-5 select-window -t 5
bind-key -n M-6 select-window -t 6
bind-key -n M-7 select-window -t 7
bind-key -n M-8 select-window -t 8
bind-key -n M-9 select-window -t 9

# Stop all Docker containers when closing a session.
set-hook -g session-closed 'run-shell "docker container stop $(docker container ls --all --quiet) 1> /dev/null 2> /dev/null"'

# List of plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'christoomey/vim-tmux-navigator'

# Theme
set -g @plugin 'dreamsofcode-io/catppuccin-tmux'
# set -g @plugin 'rose-pine/tmux'
# set -g @rose_pine_variant 'main'
# set -g @rose_pine_user 'on'
# set -g @rose_pine_directory 'on'

# Other examples:
# set -g @plugin 'github_username/plugin_name'
# set -g @plugin 'github_username/plugin_name#branch'
# set -g @plugin 'git@github.com:user/plugin'
# set -g @plugin 'git@bitbucket.com:user/plugin'

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '~/.tmux/plugins/tpm/tpm'
